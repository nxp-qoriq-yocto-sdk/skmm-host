/* Copyright 2013 Freescale Semiconductor, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 *
 * Neither the name of Freescale Semiconductor nor the
 * names of its contributors may be used to endorse or promote products
 * derived from this software without specific prior written permission.
 *
 * ALTERNATIVELY, this software may be distributed under the terms of the
 * GNU General Public License ("GPL") as published by the Free Software
 * Foundation, either version 2 of that License or (at your option) any
 * later version.
 *
 * THIS SOFTWARE IS PROVIDED BY Freescale Semiconductor ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL Freescale Semiconductor BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE)ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* ##################### DSA 1024 TEST VECTORS ###################### */

static uint8_t Q_1024[] = {
	0x18, 0xAB, 0xC0, 0xFF, 0x56, 0xBE, 0xB8, 0x7A, 0xA4, 0x58, 0x43, 0x80,
	0xF1, 0x47, 0x88, 0xBC, 0x3F, 0xFA, 0x23, 0x52, 0xB5,
	0x82, 0x03, 0x68, 0xC7, 0xA3, 0xCA, 0xE5, 0xF2, 0x8D, 0x29, 0x49, 0x76,
	0x17, 0xEE, 0xBE, 0x04, 0x33, 0x4E, 0x8D,
	0x20, 0xFE, 0x3C, 0x75, 0xBB, 0x73, 0x3F, 0x08, 0x24, 0xB2, 0x2F, 0x3F,
	0x42, 0x2F, 0x3B, 0x16, 0x57, 0x32, 0x43, 0xE0, 0x24,
	0xEB, 0x88, 0x92, 0x5F, 0xAD, 0xB8, 0x06, 0x8B, 0xFF, 0x61, 0x44, 0x18,
	0x92, 0x40, 0x83, 0x37, 0xDE, 0xEC, 0xE8, 0x96,
	0xA6, 0xF6, 0x80, 0x4B, 0x84, 0x79, 0xF4, 0x75, 0x5E, 0x77, 0x41, 0x8D,
	0xCF, 0x3A, 0x6B, 0xD0, 0xCB, 0x01, 0xB1, 0x29, 0x11,
	0xBF, 0xA8, 0xC6, 0x2B, 0x9A, 0xE4, 0x19, 0xC8, 0xEB, 0xEB, 0xF6, 0xAB,
	0x75, 0x9B, 0x8D, 0x51, 0x3A, 0x16, 0x8C, 0x4E,
	0xC7, 0xE7, 0xF1, 0xB0, 0xA9, 0x99
};

static int q_len = sizeof(Q_1024);

static uint8_t R_1024[] = {
	0xd6, 0x99, 0x70, 0xd4, 0x6e, 0xed, 0x12, 0x5a, 0x58, 0xdc, 0xd6, 0xfb,
	0x2f, 0xb5, 0x66, 0xca, 0x4f, 0x1f, 0xa8, 0x57
};

static int r_len = sizeof(R_1024);

static uint8_t G_1024[] = {
	0x06, 0xF6, 0x68, 0x50, 0x23, 0xCB, 0x51, 0x17, 0x96, 0x47, 0x28, 0x3E,
	0x3B, 0xB3, 0xB9, 0x5B, 0xE3, 0x6F, 0x74, 0x95, 0x92, 0x72, 0x4C,
	0x6A, 0x68, 0xD5, 0x82, 0xF9, 0xFB, 0xF1, 0x39, 0x4C, 0x2F, 0x9B, 0xC4,
	0xF6, 0x66, 0x47, 0xCB, 0x7A, 0x82, 0x9D, 0x02, 0x21,
	0x7D, 0xFD, 0x26, 0xA5, 0xAD, 0x9F, 0xFA, 0xBE, 0xA3, 0x26, 0xD1, 0xA9,
	0x05, 0xAD, 0x56, 0xBC, 0x03, 0xA5, 0x77, 0x5E, 0xC7, 0x34, 0x63,
	0x7C, 0xB3, 0xBE, 0xD0, 0x11, 0x31, 0x90, 0x8E, 0x68, 0x94, 0x7A, 0xBE,
	0x4F, 0xD6, 0xA6, 0x5F, 0x57, 0x9F, 0x73, 0x1D, 0x2D, 0x89,
	0x42, 0xBF, 0x07, 0x72, 0xD1, 0xF1, 0x19, 0xA8, 0x67, 0x1B, 0xD6, 0x3E,
	0x8F, 0xCC, 0x0C, 0x46, 0x06, 0x5B, 0x42, 0xCF, 0xEE, 0x87, 0xA3,
	0xE0, 0xFD, 0x8F, 0x27, 0xD7, 0xA7, 0x0D, 0x59, 0x27, 0x03, 0x90, 0x4C,
	0x52, 0x05, 0xD7, 0x91
};

static int g_len = sizeof(G_1024);

static uint8_t PRIV_KEY_1024[] = {
	0x31, 0x6D, 0xAC, 0x0E, 0x27, 0x2F, 0xBF, 0x8F, 0x1E, 0xEA, 0xE0, 0x7C,
	0xE4, 0x80, 0xAD, 0xF7, 0x20, 0x8E, 0xA9, 0x22
};

static int priv_key_len = sizeof(PRIV_KEY_1024);

static uint8_t PUB_KEY_1024[] = {
	0x04, 0x40, 0xC7, 0x33, 0xAE, 0x67, 0xC1, 0x51, 0x0B, 0xB6, 0x61, 0xF4,
	0x36, 0x2B, 0xC7, 0xC0, 0xB9, 0xC5, 0xFA, 0xA1, 0xF6, 0x12, 0x24,
	0xF6,
	0x07, 0x35, 0x17, 0x04, 0xC9, 0x2F, 0xCC, 0xF6, 0xB1, 0xEB, 0xDE, 0xC5,
	0x1C, 0x71, 0xC2, 0xC6, 0xAC, 0x78, 0xBA, 0x43, 0xDF, 0x49, 0x54,
	0x06,
	0x02, 0xDF, 0x5F, 0x8C, 0xE9, 0x4A, 0x4E, 0xD4, 0xFB, 0xB5, 0x64, 0xA9,
	0x27, 0xD6, 0xD7, 0x0F, 0x2A, 0x74, 0xB3, 0xE4, 0x21, 0xED, 0xFC,
	0xCF,
	0xFD, 0x75, 0xD9, 0xF1, 0x8C, 0x4F, 0xD5, 0x84, 0xE7, 0x6C, 0x7F, 0xD0,
	0x6E, 0x0D, 0xCC, 0x69, 0x93, 0xE2, 0xC1, 0x5C, 0x18, 0x56, 0x31,
	0xDD,
	0xE4, 0x10, 0xE0, 0x13, 0xC9, 0x5B, 0x97, 0x87, 0x0D, 0x34, 0x1F, 0xF1,
	0xBF, 0x8F, 0x3C, 0x65, 0x8E, 0x0E, 0xB9, 0xBE, 0x96, 0x04, 0xFB,
	0xED,
	0x02, 0x33, 0xDB, 0x9D, 0x2A, 0x83, 0x6F, 0x64
};

static int pub_key_len = sizeof(PUB_KEY_1024);

/* ##################### DSA 2048 TEST VECTORS ###################### */
static uint8_t R_2048[] = {
	0xb1, 0xeb, 0x6c, 0xee, 0xfc, 0x10, 0x63, 0x80, 0xd3, 0xd0, 0xf4, 0x6f,
	    0xa1, 0x90,
	0x0e, 0x47, 0x83, 0x12, 0xc2, 0x4f, 0xa3, 0xd7, 0xc7, 0x69, 0xfc, 0x73,
	    0xa6, 0x7c, 0xe4,
	0xf9, 0xac, 0x7f
};

static int r_len_2048 = sizeof(R_2048);

static uint8_t Q_2048[] = {
	0x9f, 0x59, 0xf7, 0x23, 0x85, 0x7b, 0x4f, 0xd6, 0x14, 0xf7, 0x3f, 0x30,
	    0x0d, 0x53,
	0x48, 0xaa, 0xf2, 0x8a, 0x8e, 0x17, 0x46, 0x52, 0xd4, 0x67, 0x4e, 0xfc,
	    0xbc, 0xdf, 0x26,
	0x2b, 0x6f, 0xd5, 0xc0, 0x8f, 0x36, 0x18, 0x20, 0x04, 0x7c, 0x7a, 0x1f,
	    0x2a, 0x00, 0xf4,
	0xbc, 0x00, 0xc9, 0x33, 0xf8, 0x15, 0x8c, 0xcd, 0xdf, 0xbf, 0x58, 0xa8,
	    0x0c, 0xcc, 0x3f,
	0x2e, 0xc1, 0x5e, 0x41, 0x0b, 0x0d, 0xdd, 0xe1, 0xe0, 0x13, 0x6c, 0x8a,
	    0xdf, 0xa2, 0xb3,
	0x5e, 0x96, 0xb2, 0x85, 0xae, 0x61, 0x5d, 0xe1, 0xa9, 0x07, 0x3e, 0x3b,
	    0x1d, 0xb6, 0xc5,
	0x3a, 0x71, 0x88, 0xcb, 0x5a, 0x34, 0xf9, 0xc0, 0xb4, 0x70, 0xc6, 0xe6,
	    0x67, 0x4b, 0x09,
	0xfb, 0xd4, 0x51, 0xea, 0xd1, 0x21, 0x9e, 0x94, 0xf9, 0xa6, 0x8f, 0x3c,
	    0x9a, 0x97, 0xd0,
	0x25, 0x9d, 0x0f, 0x10, 0x79, 0xff, 0xa1, 0x75, 0xe7, 0xfa, 0xb7, 0x3b,
	    0x04, 0x53, 0x16,
	0x9f, 0xcb, 0x18, 0xfb, 0x9e, 0xc3, 0x2f, 0x11, 0x3e, 0x1f, 0xb6, 0xcc,
	    0x86, 0x53, 0xa3,
	0x80, 0xad, 0x38, 0xaf, 0xb1, 0x36, 0xfb, 0x4d, 0xe7, 0xd1, 0x80, 0xb2,
	    0x8f, 0x71, 0xcc,
	0x8d, 0xdd, 0x09, 0x4f, 0xe4, 0x0b, 0x09, 0xe4, 0xe5, 0xc8, 0xdf, 0x53,
	    0x1a, 0x46, 0x31,
	0x0e, 0xc8, 0x69, 0x7f, 0xc4, 0x4f, 0x75, 0xb2, 0x63, 0x9e, 0x5f, 0x10,
	    0xc2, 0x25, 0x39,
	0x7b, 0x9f, 0xb1, 0x2a, 0xef, 0x79, 0xf0, 0x9e, 0x88, 0x3f, 0xde, 0xeb,
	    0x13, 0x23, 0xb4,
	0xf1, 0x88, 0x9f, 0x49, 0xe8, 0xa6, 0x2a, 0x78, 0xd4, 0x76, 0x06, 0x28,
	    0x05, 0xe8, 0x9e,
	0xc3, 0x36, 0x49, 0xd4, 0x3b, 0xf5, 0x05, 0x96, 0x83, 0xe4, 0x16, 0x68,
	    0x55, 0xa5, 0xd5,
	0x2f, 0x3e, 0xcc, 0xbf, 0x4c, 0x7c, 0xf1, 0x8e, 0x68, 0x29, 0x57, 0x87,
	    0x23, 0xbf, 0xad,
	0x36, 0x17
};

static int q_len_2048 = sizeof(Q_2048);

static uint8_t G_2048[] = {
	0x6c, 0x00, 0x08, 0x41, 0x49, 0x31, 0x72, 0x91, 0xfe, 0xda, 0xc8, 0x12,
	    0xd4, 0xca, 0xa4,
	0xef, 0x9e, 0x70, 0x5e, 0xe9, 0x4a, 0x13, 0x57, 0xc0, 0xda, 0x72, 0x7e,
	    0x3d, 0x12, 0x5b,
	0x69, 0x8a, 0xc9, 0x8c, 0xe9, 0xcf, 0xa4, 0xa1, 0xdd, 0xed, 0x49, 0x95,
	    0xcb, 0xd9, 0x9d,
	0x81, 0x84, 0xb9, 0x79, 0x91, 0xfb, 0xe6, 0xc9, 0xee, 0xdd, 0x9f, 0x0a,
	    0x1e, 0x17, 0xbc,
	0xa3, 0xd8, 0xb5, 0x23, 0xf4, 0xe4, 0x9c, 0x82, 0x0e, 0xf5, 0xd2, 0x79,
	    0x15, 0xb5, 0x3c,
	0x99, 0x92, 0x7e, 0xf2, 0x0f, 0x0f, 0x4e, 0x22, 0x89, 0x77, 0x20, 0xb9,
	    0x92, 0x05, 0xfa,
	0x03, 0x70, 0x95, 0x3d, 0x7d, 0x00, 0x2d, 0x83, 0x49, 0xa5, 0xc7, 0xc0,
	    0xe7, 0xde, 0xcc,
	0x95, 0x0d, 0x3e, 0x69, 0x36, 0x84, 0x1d, 0x15, 0x80, 0xee, 0x67, 0x34,
	    0x8d, 0x58, 0x10,
	0xd6, 0x2a, 0x8f, 0x44, 0x59, 0xa3, 0x52, 0x3c, 0x25, 0xdd, 0xc9, 0x3e,
	    0x93, 0xc9, 0xb0,
	0xb8, 0x88, 0xe6, 0x98, 0xd6, 0x4d, 0x2f, 0x52, 0x70, 0x25, 0xaa, 0xf9,
	    0xf9, 0x92, 0x4e,
	0x92, 0x58, 0x29, 0x8e, 0x26, 0x46, 0xa5, 0xea, 0x82, 0x95, 0x2e, 0x46,
	    0x83, 0xaa, 0x99,
	0x39, 0xc6, 0xfe, 0x9b, 0xda, 0xe3, 0x81, 0x7e, 0x87, 0xc7, 0x96, 0x5f,
	    0x1e, 0xf7, 0xdc,
	0x1b, 0xe4, 0x5b, 0xd3, 0x6b, 0x6b, 0xb7, 0xd3, 0x0b, 0x5d, 0x6d, 0x5e,
	    0x1e, 0xfd, 0x16,
	0x83, 0xca, 0x23, 0x58, 0x4a, 0x8a, 0xae, 0xdd, 0xb1, 0xf3, 0x1f, 0x1a,
	    0x17, 0xab, 0xf0,
	0x5f, 0x71, 0xa4, 0x23, 0x4f, 0xed, 0x64, 0xc1, 0x1f, 0xc1, 0x26, 0xb7,
	    0x88, 0xad, 0xd3,
	0x94, 0x1f, 0xc4, 0x1d, 0x45, 0x84, 0x1e, 0x20, 0x91, 0x7f, 0xd3, 0x09,
	    0x0c, 0x42, 0xb3,
	0x38, 0x3a, 0xb2, 0x55, 0x62, 0x4e, 0xd5, 0x8d, 0xfc, 0x01, 0x19, 0x90,
	    0x72, 0xdd, 0x9a,
	0x9b
};

static int g_len_2048 = sizeof(G_2048);

static uint8_t PRIV_KEY_2048[] = {
	0x3a, 0x04, 0x29, 0xc3, 0xed, 0xf8, 0xcb, 0x54, 0x55, 0xe6, 0x62, 0xe5,
	    0xeb, 0x2f, 0x2b,
	0x36, 0x0f, 0xce, 0x42, 0x36, 0x95, 0x56, 0x6a, 0xdd, 0x4e, 0x21, 0x3b,
	    0xc9, 0xd0, 0xed,
	0xf2, 0x8f
};

static int priv_key_len_2048 = sizeof(PRIV_KEY_2048);

static uint8_t PUB_KEY_2048[] = {
	0x27, 0x97, 0x07, 0x93, 0x23, 0xbc, 0x8e, 0x3e, 0xcb, 0xf6, 0xaf, 0x70,
	    0x0d, 0x68, 0xab,
	0x86, 0x63, 0xad, 0xac, 0x73, 0xfc, 0x06, 0x7d, 0x7d, 0xb2, 0xf0, 0x8b,
	    0x5c, 0x23, 0x89,
	0x5c, 0x9c, 0x70, 0xe6, 0xee, 0x9a, 0x36, 0xf8, 0x02, 0x26, 0x90, 0x27,
	    0xb0, 0x1f, 0xe4,
	0x03, 0x17, 0x05, 0xee, 0x45, 0x64, 0x9d, 0x03, 0xbc, 0xf8, 0x74, 0x7b,
	    0x73, 0xce, 0xb5,
	0x84, 0xde, 0xce, 0xab, 0xd4, 0x2c, 0x11, 0xc5, 0x9f, 0x88, 0xde, 0x0b,
	    0x34, 0x05, 0x6a,
	0xad, 0xec, 0xb3, 0x6b, 0x36, 0xd3, 0x4d, 0x92, 0x76, 0x8a, 0x76, 0xe8,
	    0xa3, 0x5c, 0x78,
	0x66, 0x4a, 0xfc, 0xf1, 0xf9, 0x7f, 0x22, 0xce, 0x60, 0xa8, 0x95, 0x6b,
	    0x72, 0x86, 0x05,
	0xf6, 0x78, 0xc7, 0xd4, 0x57, 0xc5, 0x13, 0xb4, 0xb0, 0x32, 0x7c, 0x9c,
	    0x92, 0x16, 0xdf,
	0x1b, 0x6e, 0x69, 0x71, 0xee, 0xd5, 0xf3, 0xf2, 0xab, 0x24, 0x61, 0xc1,
	    0x9e, 0x57, 0x81,
	0x49, 0x17, 0x9c, 0x1f, 0x68, 0x69, 0xc0, 0xb4, 0x89, 0xde, 0x2f, 0x9e,
	    0xbf, 0x2c, 0xb5,
	0x44, 0x9a, 0x71, 0xaf, 0x62, 0x60, 0xc7, 0x63, 0x38, 0x21, 0x75, 0x88,
	    0xa0, 0x3f, 0x7d,
	0xfa, 0x29, 0xef, 0x9c, 0x07, 0x68, 0x96, 0x06, 0xcc, 0xbb, 0xa7, 0xbc,
	    0x4a, 0x20, 0x98,
	0x3a, 0xf2, 0xda, 0xc7, 0xb1, 0xaa, 0x71, 0x94, 0x8d, 0xfd, 0xea, 0x2d,
	    0xde, 0x30, 0x07,
	0x4b, 0xb1, 0xc3, 0x13, 0xc6, 0x31, 0x1f, 0x6f, 0xe3, 0xee, 0xb9, 0xd8,
	    0x67, 0x81, 0x83,
	0x96, 0xa6, 0xea, 0xa1, 0x7e, 0x9b, 0x90, 0xd4, 0xf6, 0xf9, 0xc3, 0x61,
	    0x0e, 0x18, 0x67,
	0xca, 0x33, 0x98, 0x5d, 0x9e, 0xc9, 0x31, 0x82, 0xcb, 0x49, 0x80, 0x51,
	    0x0c, 0x94, 0xee,
	0x1c, 0x59, 0xa4, 0xe6, 0x3c, 0x9f, 0x74, 0x11, 0xd9, 0x86, 0x69, 0xd4,
	    0x78, 0x58, 0x5c,
	0x82
};

static int pub_key_len_2048 = sizeof(PUB_KEY_2048);

/* ##################### DSA 4096 TEST VECTORS ###################### */

static uint8_t Q_4096[] = {
	0xf6, 0x22, 0x4d, 0x26, 0xcb, 0x6f, 0x0d, 0xed, 0x18, 0x5b, 0xce, 0xad,
	    0xb8, 0xc5,
	0x3a, 0xd8, 0xf4, 0x44, 0x7f, 0x5a, 0x84, 0x5a, 0x0c, 0x3c, 0xdf, 0x7b,
	    0xf7, 0x99, 0x36,
	0x91, 0x50, 0x0f, 0x6b, 0xe9, 0x33, 0x5f, 0x1a, 0xbc, 0x01, 0xd1, 0x8f,
	    0xa4, 0xaa, 0xfa,
	0x58, 0x0d, 0x49, 0xe2, 0x14, 0xc6, 0xff, 0x03, 0x94, 0x0c, 0x92, 0xc7,
	    0x81, 0x3b, 0xe0,
	0xd4, 0x9c, 0xdc, 0xb9, 0x1b, 0x6b, 0x88, 0x92, 0x05, 0x4c, 0xb8, 0xad,
	    0x2d, 0x00, 0xb2,
	0x35, 0x3a, 0x4c, 0x28, 0x24, 0xf8, 0x1a, 0x4c, 0xa7, 0xe1, 0x8b, 0x0f,
	    0x2e, 0x75, 0xc9,
	0x83, 0xc9, 0x7b, 0xa7, 0x2e, 0x86, 0x97, 0x5e, 0x7e, 0x93, 0x42, 0x8c,
	    0x66, 0x96, 0xb6,
	0x64, 0xc3, 0x32, 0x2e, 0x42, 0xf9, 0xf3, 0x08, 0xc6, 0xcc, 0x52, 0x6e,
	    0xc0, 0x94, 0xa5,
	0x7a, 0xf4, 0xd7, 0x8f, 0xe9, 0x18, 0xf0, 0x27, 0x42, 0x85, 0xd8, 0xac,
	    0x0a, 0xd2, 0xcc,
	0x02, 0xba, 0xb7, 0xe2, 0x9d, 0x90, 0x3f, 0x50, 0x8d, 0x6e, 0x44, 0x2a,
	    0x1a, 0xf9, 0xcd,
	0xfb, 0x7e, 0x43, 0xc0, 0x8d, 0xc8, 0x96, 0xab, 0x16, 0xd4, 0x57, 0x0c,
	    0x7b, 0x73, 0x8a,
	0x80, 0x0b, 0x4d, 0x5a, 0xa0, 0x86, 0xc0, 0x50, 0xd2, 0xa9, 0x7d, 0x33,
	    0xd0, 0x0d, 0x2d,
	0xf7, 0xef, 0xc6, 0xfe, 0x52, 0xb6, 0x72, 0x71, 0x40, 0x77, 0x05, 0x04,
	    0x3e, 0xf1, 0xd8,
	0x49, 0x6c, 0x51, 0xa3, 0x71, 0xd7, 0x08, 0xfa, 0x24, 0x75, 0x81, 0x17,
	    0x17, 0x0b, 0x1b,
	0x22, 0x90, 0xb3, 0x94, 0x01, 0x54, 0xa1, 0x7d, 0xcd, 0x0c, 0x59, 0x95,
	    0x7f, 0x54, 0x58,
	0x90, 0xa7, 0x38, 0x5f, 0x6c, 0x61, 0x29, 0xe6, 0x5d, 0x72, 0xfb, 0x5a,
	    0x24, 0x46, 0x0d,
	0x9d, 0x97, 0xe3, 0x14, 0xf4, 0x31, 0x7d, 0x99, 0x77, 0x0c, 0x2b, 0x8b,
	    0x5e, 0xa5, 0x91,
	0xe6, 0xdd, 0x90, 0x49, 0xd8, 0xb3, 0xf6, 0x9d, 0x18, 0x5c, 0xc3, 0xbb,
	    0xa8, 0x03, 0x53,
	0x23, 0xf0, 0x9d, 0x2e, 0x0d, 0xf9, 0x02, 0x79, 0x02, 0xdd, 0xa4, 0x38,
	    0x9a, 0x94, 0xf6,
	0xc6, 0x58, 0x16, 0x48, 0xfc, 0x78, 0x5b, 0x54, 0x26, 0x1d, 0xbf, 0x87,
	    0x52, 0x2b, 0xbe,
	0x5d, 0x45, 0xe3, 0x0f, 0xbc, 0x84, 0x77, 0xa1, 0x7d, 0xf7, 0x76, 0x53,
	    0x96, 0x1a, 0x05,
	0x58, 0x66, 0xe9, 0xf0, 0xb6, 0x39, 0x46, 0x1b, 0x13, 0x7d, 0xcf, 0x05,
	    0xc9, 0x40, 0x18,
	0x15, 0x85, 0xb9, 0x38, 0x13, 0x4d, 0x88, 0x1c, 0x68, 0x3e, 0xa9, 0x17,
	    0xd4, 0x8f, 0x0e,
	0x95, 0xbb, 0x38, 0xd7, 0x81, 0x02, 0x4f, 0x80, 0xd5, 0x7b, 0x79, 0x04,
	    0xb3, 0xe8, 0xf0,
	0xf8, 0xdc, 0x1a, 0x85, 0x27, 0x73, 0xd5, 0x7d, 0x65, 0xff, 0x75, 0x56,
	    0x18, 0x1f, 0x9a,
	0x12, 0x9f, 0x6b, 0x9c, 0x03, 0x44, 0x01, 0x07, 0xa1, 0xe2, 0x1e, 0xa8,
	    0x38, 0xeb, 0x47,
	0x4b, 0xa8, 0x43, 0xfe, 0x2c, 0x71, 0xbe, 0x2a, 0x0b, 0x41, 0x99, 0x03,
	    0xde, 0xff, 0x12,
	0x31, 0xc9, 0x85, 0x95, 0xe0, 0x51, 0xbd, 0x82, 0x35, 0x6b, 0x2e, 0xaa,
	    0x44, 0xda, 0x2e,
	0x7b, 0x1b, 0xd5, 0xa1, 0x46, 0xf0, 0xf0, 0xf0, 0xa5, 0xa1, 0xd8, 0x70,
	    0x76, 0xfe, 0x36,
	0xfd, 0x4e, 0x77, 0xf0, 0xfb, 0xdd, 0xb8, 0xc8, 0x58, 0x26, 0x9b, 0xf7,
	    0xf1, 0xc7, 0xe7,
	0xe9, 0x44, 0xd7, 0xaa, 0xfe, 0x36, 0x9d, 0x32, 0xdc, 0xca, 0x6d, 0x53,
	    0xdc, 0x9e, 0x31,
	0x84, 0xce, 0x97, 0x43, 0x41, 0x18, 0x95, 0xab, 0xbd, 0x6f, 0x89, 0x95,
	    0x54, 0x4f, 0xcc,
	0x5c, 0xd4, 0x87, 0x17, 0x3a, 0xdd, 0x84, 0xae, 0xcd, 0xf7, 0xe7, 0xc0,
	    0xb7, 0x1d, 0x70,
	0xf6, 0x77, 0x72, 0x0e, 0x63, 0x01, 0xc0, 0x59, 0x56, 0x11, 0x2b, 0x6c,
	    0x7c, 0x05, 0xcf,
	0x0c, 0xb9, 0x4b
};

static int q_len_4096 = sizeof(Q_4096);

static uint8_t R_4096[] = {
	0x9d, 0x17, 0x4f, 0x8e, 0x8e, 0x4f, 0x62, 0x28, 0xe2, 0xd9, 0x71, 0xf2,
	    0x5a, 0x36,
	0xcd, 0xae, 0x64, 0x08, 0xf5, 0x5a, 0x15, 0x9f, 0x8b, 0x2d, 0x9c, 0xc4,
	    0xd0, 0xca, 0x86,
	0xd3, 0x40, 0x49
};

static int r_len_4096 = sizeof(R_4096);

static uint8_t G_4096[] = {
	0x51, 0x37, 0xfc, 0x13, 0xe9, 0x4e, 0x8b, 0xb2, 0x20, 0x62, 0x09, 0xa5,
	    0x64, 0x66, 0x82,
	0x12, 0xd8, 0xfb, 0x52, 0xba, 0x8e, 0x22, 0xe9, 0x5e, 0xd0, 0x3d, 0xdf,
	    0xb9, 0xaa, 0x36,
	0x2c, 0xf0, 0xb5, 0x1b, 0xe6, 0xf9, 0x30, 0x58, 0x19, 0x2a, 0x14, 0xbc,
	    0xa6, 0x6b, 0xed,
	0xea, 0x9a, 0x54, 0x50, 0x49, 0xb9, 0x4a, 0xbe, 0x26, 0x58, 0x23, 0xc3,
	    0x99, 0xab, 0xdd,
	0x16, 0x39, 0xb6, 0xb0, 0xe2, 0x3f, 0xe5, 0x7c, 0x97, 0x6e, 0x3f, 0xac,
	    0x77, 0x6a, 0xcd,
	0x32, 0x6a, 0x1a, 0xb9, 0xc3, 0x1d, 0x00, 0x84, 0xe8, 0xb2, 0xb6, 0xb4,
	    0x14, 0xf9, 0xc2,
	0x83, 0xbd, 0x79, 0xdd, 0x16, 0x14, 0x2b, 0x42, 0x57, 0xe1, 0x18, 0x23,
	    0xdf, 0x0a, 0xe7,
	0xa9, 0x25, 0x7a, 0xd1, 0x44, 0x8c, 0x15, 0xc1, 0xc6, 0xc7, 0x30, 0xfa,
	    0xcd, 0x35, 0x4e,
	0x5b, 0x47, 0x6b, 0xa6, 0xef, 0xe3, 0xb9, 0x0e, 0xdb, 0x84, 0xe0, 0xf9,
	    0x2d, 0x99, 0x7c,
	0x3b, 0x0f, 0xcc, 0xbb, 0x6c, 0xb6, 0x29, 0x13, 0x26, 0x26, 0xa0, 0x4b,
	    0xc6, 0x61, 0xbe,
	0x74, 0xd3, 0xde, 0xab, 0x6a, 0x23, 0xf2, 0xa5, 0xc2, 0x49, 0x1f, 0xa8,
	    0x8b, 0xdc, 0x1d,
	0x6b, 0x28, 0x69, 0x7a, 0x58, 0xad, 0x73, 0x88, 0x58, 0x95, 0x8c, 0x84,
	    0x38, 0x0b, 0xb3,
	0xc7, 0x68, 0xca, 0x44, 0xcf, 0x09, 0x2c, 0x14, 0x26, 0x0f, 0x7e, 0x1f,
	    0x7c, 0xdf, 0xc5,
	0x6a, 0xdb, 0x41, 0x16, 0x61, 0x59, 0x67, 0xe2, 0x46, 0x99, 0x02, 0x21,
	    0x07, 0xfa, 0x19,
	0xd4, 0xee, 0xb3, 0x02, 0x37, 0x13, 0x17, 0x5e, 0x84, 0x05, 0x3b, 0x19,
	    0xc5, 0xf7, 0x7d,
	0x53, 0x3c, 0xea, 0x07, 0x86, 0xdd, 0xa3, 0x29, 0x8a, 0xd5, 0xc3, 0xbc,
	    0x8e, 0xd1, 0x22,
	0x88, 0xe9, 0xf4, 0xe6, 0xd4, 0x02, 0x51, 0x44, 0x47, 0x51, 0xe8, 0x36,
	    0x60, 0xe5, 0x2b,
	0x49, 0x37, 0xbc, 0xd1, 0x6d, 0x3d, 0xc6, 0xa0, 0xd2, 0xa3, 0xda, 0xb6,
	    0x48, 0x50, 0xcc,
	0x9c, 0x58, 0x61, 0x99, 0x70, 0xcf, 0xba, 0xce, 0x6f, 0x3e, 0x59, 0xdb,
	    0xef, 0xad, 0xa6,
	0x00, 0xbe, 0x3b, 0xcb, 0x82, 0xdd, 0xba, 0x6e, 0xf7, 0xc7, 0x89, 0x9e,
	    0x95, 0xde, 0xad,
	0x8b, 0x41, 0x59, 0x4f, 0x01, 0xff, 0xce, 0x1f, 0xdc, 0xa7, 0x00, 0xab,
	    0x43, 0x56, 0x9f,
	0x6b, 0x20, 0x3f, 0x72, 0x54, 0x58, 0x6a, 0xfc, 0x61, 0x00, 0x01, 0x4f,
	    0xcb, 0x00, 0x58,
	0xb0, 0x68, 0x3d, 0xd8, 0x35, 0xa2, 0xd4, 0x7a, 0x21, 0x23, 0x24, 0xc4,
	    0xa2, 0x2c, 0x9d,
	0xfc, 0x9c, 0xd1, 0x22, 0xc9, 0x80, 0x90, 0x30, 0xcc, 0xa8, 0xc6, 0x2e,
	    0xf4, 0x3b, 0x76,
	0x68, 0x85, 0xb8, 0x16, 0x27, 0xc4, 0x9f, 0x8d, 0xa5, 0x8e, 0xbc, 0x2e,
	    0xd7, 0x9a, 0x75,
	0xf9, 0xef, 0xbf, 0x3d, 0x00, 0x69, 0x23, 0x95, 0xd2, 0xa0, 0xb3, 0x92,
	    0xda, 0xf3, 0x66,
	0x5b, 0xbd, 0x41, 0x7e, 0x74, 0x65, 0x1a, 0xbc, 0x8a, 0x71, 0xbf, 0x9b,
	    0x4f, 0x0a, 0x5c,
	0x0d, 0xfa, 0x27, 0xc8, 0x9b, 0x63, 0x16, 0x96, 0x6a, 0xad, 0xe4, 0x5d,
	    0xc1, 0xad, 0xde,
	0x76, 0xf0, 0x73, 0x83, 0x15, 0x64, 0xdc, 0x2b, 0x59, 0x34, 0x4a, 0x85,
	    0x0a, 0x98, 0x4f,
	0x65, 0xca, 0xa2, 0x8f, 0x65, 0x9f, 0xcb, 0xb3, 0xd4, 0xd5, 0x45, 0xd1,
	    0x63, 0x7b, 0x76,
	0x82, 0x75, 0x23, 0x49, 0x0d, 0x0e, 0x59, 0x75, 0x08, 0xb7, 0x6d, 0xc7,
	    0x7f, 0xa2, 0xaf,
	0xb7, 0x46, 0xad, 0x57, 0xc7, 0xb9, 0xec, 0x45, 0x5f, 0xad, 0x0f, 0x17,
	    0x11, 0x8f, 0x63,
	0x9e, 0xbc, 0x29, 0x3b, 0xa1, 0xd7, 0x7a, 0xbf, 0x59, 0x7e, 0x9c, 0x03,
	    0xed, 0x3c, 0xeb,
	0x91, 0x7e, 0x8d, 0xfd, 0x74, 0x6a, 0xbb, 0xcb, 0xdc, 0x28, 0xcc, 0x5b,
	    0xcf, 0xfe, 0x8d,
	0xf7, 0x2a
};

static int g_len_4096 = sizeof(G_4096);

static uint8_t PRIV_KEY_4096[] = {
	0x99, 0xc8, 0xf2, 0x7f, 0x21, 0xe1, 0x2e, 0x83, 0x25, 0x38, 0x9d, 0xbb,
	    0xae, 0x4a,
	0x12, 0x70, 0xde, 0x38, 0x2f, 0xac, 0xd7, 0x8a, 0x97, 0xc7, 0x60, 0xdc,
	    0xf3, 0x55, 0x32,
	0x02, 0x0f, 0x61
};

static int priv_key_len_4096 = sizeof(PRIV_KEY_4096);

static uint8_t PUB_KEY_4096[] = {
	0x58, 0xa9, 0x61, 0xad, 0x20, 0x10, 0x6b, 0x32, 0x41, 0x11, 0xac, 0xe0,
	    0x31, 0xdd, 0x01,
	0x08, 0x97, 0x92, 0xac, 0x45, 0x5b, 0x7c, 0x15, 0xfd, 0x8f, 0x13, 0xda,
	    0x9e, 0x95, 0xd8,
	0xe8, 0x5a, 0x47, 0x1c, 0x08, 0xfc, 0xe2, 0xf0, 0x76, 0x76, 0x77, 0xf6,
	    0x22, 0x71, 0x67,
	0xa0, 0x4a, 0x72, 0xa9, 0xfa, 0x88, 0xea, 0x10, 0xb5, 0x69, 0xfc, 0x17,
	    0x2a, 0x5b, 0x8f,
	0xa3, 0x6e, 0x47, 0x46, 0x82, 0xc6, 0xa2, 0xef, 0xcb, 0xe4, 0x85, 0xf2,
	    0xdd, 0x7f, 0xb3,
	0x77, 0x3a, 0x52, 0x5c, 0x9b, 0x74, 0xaf, 0x79, 0x72, 0x53, 0x03, 0x4f,
	    0xbc, 0x27, 0x57,
	0x15, 0x3f, 0x2c, 0xae, 0x08, 0xfc, 0x30, 0x86, 0xf8, 0xa0, 0x4d, 0xb7,
	    0x51, 0x0c, 0xa5,
	0x98, 0xc5, 0x6e, 0xed, 0xb7, 0x00, 0x2f, 0x08, 0xca, 0x4b, 0x8d, 0x2c,
	    0x5e, 0x38, 0xf4,
	0xd1, 0xae, 0x78, 0x00, 0x93, 0x81, 0xbf, 0xe3, 0xcf, 0xe3, 0x10, 0xcd,
	    0xad, 0x42, 0x2f,
	0xb2, 0x66, 0x7a, 0xbb, 0x88, 0xa7, 0x94, 0xaa, 0x6b, 0x0d, 0xe2, 0x20,
	    0xbd, 0xba, 0x28,
	0xad, 0x0b, 0xe2, 0xc9, 0xe7, 0x59, 0xdb, 0x3f, 0xc9, 0x4a, 0x1e, 0xfa,
	    0x3f, 0xf4, 0xf9,
	0x75, 0xab, 0x9c, 0x58, 0xec, 0x22, 0x71, 0xba, 0x50, 0xee, 0xfd, 0x4a,
	    0x5e, 0xf3, 0x02,
	0xb7, 0x53, 0x19, 0x0c, 0x8d, 0xfd, 0x6e, 0xce, 0xcb, 0xac, 0xaf, 0xe0,
	    0xe8, 0x52, 0x6d,
	0x17, 0xb5, 0xc9, 0xf1, 0xb7, 0x1e, 0x75, 0x73, 0x0c, 0xb8, 0x06, 0x70,
	    0x3c, 0xb3, 0x16,
	0x4d, 0xad, 0x13, 0xc0, 0xc8, 0xf1, 0xa5, 0x1f, 0xa8, 0x06, 0x80, 0xb6,
	    0x7b, 0x7e, 0x93,
	0xd1, 0xf4, 0x3c, 0x44, 0x8a, 0x63, 0x80, 0x0b, 0x55, 0xa2, 0x49, 0x0d,
	    0xc8, 0x63, 0xdf,
	0x5a, 0x1e, 0x00, 0x26, 0xf4, 0xb5, 0xd9, 0x71, 0x50, 0xd4, 0x4c, 0xa5,
	    0xa5, 0x20, 0xa2,
	0xfb, 0x6f, 0x71, 0x0a, 0x2b, 0xee, 0x9d, 0xb5, 0xad, 0x8b, 0x3d, 0x9f,
	    0x45, 0x0a, 0xb6,
	0x71, 0x83, 0x4c, 0xb5, 0x3b, 0x92, 0x1e, 0xef, 0x91, 0x71, 0xcd, 0xce,
	    0xb6, 0x85, 0xed,
	0xe8, 0xbe, 0x3b, 0xce, 0xd6, 0x64, 0x0f, 0x2d, 0x9e, 0x0c, 0x08, 0xbc,
	    0xee, 0xb1, 0x5e,
	0x27, 0x68, 0x7e, 0x88, 0x97, 0xb2, 0xf5, 0xe4, 0xfe, 0xf3, 0xc0, 0xd4,
	    0x80, 0xaa, 0xe6,
	0x9a, 0xad, 0x19, 0x35, 0x63, 0x39, 0x65, 0x75, 0x23, 0xd9, 0x5e, 0xd8,
	    0xdb, 0xd2, 0x9c,
	0x1d, 0xb3, 0xad, 0xe3, 0xf8, 0xd3, 0x75, 0x6d, 0xd6, 0x3d, 0xf4, 0x91,
	    0xdd, 0xa0, 0x73,
	0x16, 0x8d, 0x77, 0xd3, 0x02, 0x76, 0xca, 0x0c, 0xa1, 0x3d, 0xc9, 0x09,
	    0x8f, 0x95, 0x26,
	0xf2, 0x7e, 0x2e, 0x6e, 0x62, 0x5b, 0x37, 0x87, 0xff, 0x94, 0xc3, 0xe5,
	    0x9b, 0xf3, 0x00,
	0x04, 0xa8, 0xdf, 0x72, 0x1c, 0xc8, 0xf6, 0x35, 0x67, 0x87, 0xf4, 0x01,
	    0xc7, 0xf8, 0xb1,
	0xd0, 0x9b, 0xa2, 0x0b, 0x01, 0xea, 0x7b, 0x5f, 0x63, 0x5f, 0x4f, 0xf5,
	    0xda, 0xeb, 0x32,
	0x1e, 0x32, 0xdb, 0x35, 0x2f, 0x5a, 0x72, 0xc3, 0xc7, 0x21, 0x8c, 0x2e,
	    0x56, 0x3e, 0x82,
	0x08, 0x73, 0x33, 0x13, 0x2c, 0x61, 0xaf, 0x2b, 0x2e, 0xcd, 0x07, 0xd1,
	    0x5b, 0x35, 0x72,
	0x27, 0x1e, 0x7a, 0x9a, 0x43, 0x49, 0x7a, 0x4c, 0xad, 0xc9, 0xa7, 0xa3,
	    0xbf, 0xd9, 0x0e,
	0x02, 0xb1, 0x58, 0xf7, 0x13, 0x54, 0x22, 0x56, 0x75, 0x8c, 0x6e, 0xa6,
	    0xa5, 0x3e, 0x69,
	0xc1, 0x90, 0x08, 0x16, 0x00, 0xb9, 0x1d, 0x6e, 0xb9, 0x6e, 0xec, 0xa8,
	    0x9b, 0x47, 0x8b,
	0x12, 0xc5, 0xf2, 0xca, 0x3c, 0x21, 0x5c, 0x7a, 0x83, 0x5f, 0xfe, 0x11,
	    0x74, 0x40, 0xe7,
	0xa9, 0x3e, 0x24, 0xb5, 0xdc, 0x42, 0x01, 0x47, 0x89, 0xfc, 0xe4, 0xf4,
	    0x42, 0xae, 0xfe,
	0xec, 0x5f
};

static int pub_key_len_4096 = sizeof(PUB_KEY_4096);

static uint8_t M_1024[] = {
	0x3d, 0x72, 0x42, 0x37, 0xad, 0xc6, 0x22, 0xeb, 0x57, 0x4d, 0x87, 0xa9,
	0x30, 0xba, 0x7c, 0xe6, 0xe4, 0xd3, 0x9c, 0x88
};

static int m_len = sizeof(M_1024);

static uint8_t M_2048[] = {
	0x3d, 0x72, 0x42, 0x37, 0xad, 0xc6, 0x22, 0xeb, 0x57, 0x4d, 0x87, 0xa9,
	0x30, 0xba, 0x7c, 0xe6, 0xe4, 0xd3, 0x9c, 0x88, 0x3d, 0x72, 0x42, 0x37,
	0xad, 0xc6, 0x22, 0xeb, 0x57, 0x4d, 0x87, 0xa9, 0x30, 0xba, 0x7c, 0xe6,
	0xe4, 0xd3, 0x9c, 0x88
};

static int m_len_2048 = sizeof(M_2048);

static uint8_t M_4096[] = {
	0x3d, 0x72, 0x42, 0x37, 0xad, 0xc6, 0x22, 0xeb, 0x57, 0x4d, 0x87, 0xa9,
	0x30, 0xba, 0x7c, 0xe6, 0xe4, 0xd3, 0x9c, 0x88, 0x3d, 0x72, 0x42, 0x37,
	0xad, 0xc6, 0x22, 0xeb, 0x57, 0x4d, 0x87, 0xa9, 0x30, 0xba, 0x7c, 0xe6,
	0xe4, 0xd3, 0x9c, 0x88, 0x3d, 0x72, 0x42, 0x37, 0xad, 0xc6, 0x22, 0xeb,
	0x57, 0x4d, 0x87, 0xa9, 0x30, 0xba, 0x7c, 0xe6, 0xe4, 0xd3, 0x9c, 0x88,
	0x3d, 0x72, 0x42, 0x37, 0xad, 0xc6, 0x22, 0xeb, 0x57, 0x4d, 0x87, 0xa9,
	0x30, 0xba, 0x7c, 0xe6, 0xe4, 0xd3, 0x9c, 0x88
};

static int m_len_4096 = sizeof(M_4096);

/*static uint8_t C_1024[] =
{
0x0b ,0x7f ,0x9d ,0xa5 ,0x45 ,0xe7 ,0x7e ,0xe6 ,0x0d ,0xc7 ,0x94 ,0xe7 ,0xd1 ,
0xa5 ,0x4c ,0xf5 ,0x91 ,0x4c ,0xb5 ,0xed
};*/
/*static int c_len = sizeof(C_1024);*/

static uint8_t D_1024[] = {
	0x23, 0x7a, 0x12, 0x4c, 0x9e, 0x19, 0xa7, 0xc2, 0xb1, 0x0d, 0x8a, 0x61,
	0x00, 0xf1, 0x63, 0x7a, 0x17, 0xe5, 0xe0, 0x44
};

static int d_len = sizeof(D_1024);
static int d_len_2048 = 2 * sizeof(D_1024);
static int d_len_4096 = 4 * sizeof(D_1024);

static uint8_t C[] = {
	0x21, 0x1d, 0x2a, 0x1b, 0x81, 0x1f, 0xe2, 0xb, 0xf9, 0xdc, 0x7e, 0x72,
	0x69, 0x7a, 0xb4, 0xea, 0xaf, 0xea, 0xfa, 0xf1
};

static uint8_t C_2048[] = {
	0xb, 0x19, 0xb0, 0xa8, 0x7f, 0xed, 0xe2, 0xc5, 0xc4,
	0x6b, 0x21, 0x9, 0x5d, 0xaa, 0x5f, 0x4b, 0xfc, 0xdb,
	0x52, 0x40, 0x70, 0xec, 0x93, 0x69, 0xf8, 0x50, 0xb1,
	0xb9, 0x4e, 0x27, 0xb, 0x19, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0
};

static uint8_t C_4096[] = {
	0x87, 0x72, 0x21, 0x7d, 0x5, 0xd0, 0x22, 0xb7, 0xc,
	0xe6, 0x41, 0x9, 0x98, 0xc4, 0x72, 0x4f, 0x5d, 0x2,
	0x8b, 0xf4, 0xfb, 0xa0, 0xa6, 0x21, 0x59, 0xae, 0x5c,
	0xe, 0x6, 0xd6, 0x5b, 0xe9, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
};

static uint8_t D[] = {
	0x22, 0xf5, 0xc6, 0xd4, 0x5c, 0xa7, 0xc8, 0x95, 0x37, 0xf1, 0x5a, 0xf6,
	0x3d, 0x75, 0x8f, 0xb5, 0x37, 0xa6, 0x69, 0xf0
};

static int d = sizeof(D);

static uint8_t D_2048[] = {
	0xa5, 0xa3, 0xcc, 0xd4, 0xc7, 0xc3, 0xf8, 0xcd, 0x8f,
	0xc5, 0x74, 0xb7, 0x73, 0xeb, 0xa5, 0x67, 0xe6, 0xfc,
	0x1b, 0x3f, 0x7a, 0x2e, 0xb4, 0xc9, 0x68, 0x46, 0x3a,
	0xae, 0x6f, 0x70, 0xd4, 0xa1, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0
};

static int d_2048 = sizeof(D_2048);

static uint8_t D_4096[] = {
	0x24, 0x50, 0x58, 0x21, 0xde, 0x2c, 0x99, 0xdd, 0x79,
	0xc, 0x2b, 0x11, 0x54, 0xbd, 0x72, 0x4c, 0xb1, 0xd1,
	0x83, 0xae, 0x47, 0x7d, 0xce, 0x90, 0xbb, 0x64, 0xdc,
	0x53, 0x20, 0xb5, 0x25, 0x60, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
};

static int d_4096 = sizeof(D_4096);
